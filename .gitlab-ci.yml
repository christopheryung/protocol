stages:
  - build
  - get-secrets
  - test
  - deploy

build:
    stage: build
    script:
      - cd proxy/socks5
      - go build -o binaries/ server.go
    tags:
      - proxy
    artifacts:
      paths:
        - proxy/socks5/binaries/server

run-server:
  stage: test
  script:
    - echo "test job is running"
    - timeout 60 ./proxy/socks5/binaries/server || exit 0
  dependencies:
    - build
  tags:
    - proxy

get-secrets:
  stage: get-secrets
  image: hashicorp/vault:1.13.3
  id_tokens:
    VAULT_ID_TOKEN:
      aud: http://vault-1
  script:
    - apk update && apk add --no-cache jq curl
    - export VAULT_ADDR=$VAULT_SERVER_URL
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=gitlab-role jwt=$VAULT_ID_TOKEN)"
    - echo IP="$(vault kv get -field=ip secret/gitlab)" >> vault_secrets.env
    - echo PORT="$(vault kv get -field=port secret/gitlab)" >> vault_secrets.env
    - echo USERNAME="$(vault kv get -field=username secret/gitlab)" >> vault_secrets.env
    - echo PASSWORD="$(vault kv get -field=password secret/gitlab)" >> vault_secrets.env
  artifacts:
    reports:
      dotenv: vault_secrets.env

curl-test:
  stage: test
  script:
    - output=$(curl --socks5 $IP:$PORT -U $USERNAME:$PASSWORD 2ip.ru)
    - |
      if [ "$output" = $IP ]; then
        echo "Success"
      else
        echo "IP address doesn't match expected value"
        exit 1
      fi
  needs:
    - get-secrets